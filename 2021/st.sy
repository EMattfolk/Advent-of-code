from std use as_char, as_chars, for_each, push

IO :: blob {
    open: fn str, str -> File,
    lines: fn str -> [str],
}

File :: blob {
    read: fn *, str -> str,
    close: fn * -> void,
}

OS :: blob {
    clock: fn -> float,
}

Table :: blob {
    sort: fn [int] -> void,
}

String :: blob {
    format: fn str, * -> str,
}

io: IO : external
os: OS : external
table: Table : external
string: String : external
tonumber: fn str -> int : external

read_file :: fn file -> str
    // TODO: File existence guards
    fp :: io.open(file, "r")
    content :: fp.read(fp, "*a")
    fp.close(fp)
    ret content
end

process_time :: fn -> float
    ret os.clock()
end

ZERO :: as_char("0")
COMMA :: as_char(",")

comma_separated :: fn s -> [int] do
    values := []
    current := 0
    as_chars(s) -> for_each' fn char do
        if char == COMMA do
            values -> push' current
            current = 0
        else do
            current *= 10
            current += char - ZERO
        end
    end
    values -> push' current
    ret values
end

sort :: fn list: [int] do
    table.sort(list)
end

format :: fn fmt: str, value: * -> str do
    ret string.format(fmt, value)
end
